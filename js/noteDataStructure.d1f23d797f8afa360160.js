!function(){var t={91:function(t,n,e){"use strict";function r(t){const{tag:n,text:e,html:o,children:a,attributes:i,events:s}=t,l=document.createElement(n);return o&&(l.innerHTML=o),e&&(l.innerText=e),i&&Object.keys(i).forEach((t=>{"classes"===t?l.className=i[t].join(" "):l.setAttribute(t,i[t])})),s&&Object.keys(s).forEach((n=>{l.addEventListener(n,s[n].bind(t))})),a&&a.forEach((t=>l.appendChild(r(t)))),l}function o(t){if(!t)return;if(t instanceof HTMLElement)return t;if(Array.isArray(t))return t.map((t=>o(t)));const{tag:n,text:e,html:r,children:a,attributes:i,events:s}=t;if(!n)return document.createElement("template");const l=document.createElement(n);return r&&(l.innerHTML=r),(e||0===e||""===e)&&(l.innerText=e),i&&Object.keys(i).forEach((t=>{"classes"===t&&Array.isArray(i[t])?l.className=i[t].join(" "):l.setAttribute("classes"===t?"class":t,i[t])})),s&&Object.keys(s).forEach((n=>{l.addEventListener(n,s[n].bind(t))})),a&&l.append(...a.filter(Boolean).map(o)),l}function a({tag:t,text:n,html:e,parent:o,children:a,attributes:i}){o&&o.appendChild(r({tag:t,text:n,html:e,children:a,attributes:i}))}function i({tag:t,text:n,attributes:e}){return`<${t}${e?" "+Object.keys(e).map((t=>"classes"===t?`class="${e[t].join(" ")}"`:`${t}="${e[t]}"`)).join(" "):""}">${n}</${t}>`}function s(t){const n=new Map;if(!n.has(t)){const e=document.getElementById(t);if(!e)return null;n.set(t,e)}return n.get(t)}function l(t,n,e){const r=t.getAttribute("style")||"";new RegExp(`${n}`,"g").test(r)?t.setAttribute("style",r.replaceAll(new RegExp(`(${n}: )[\\w\\.]+(;)`,"g"),`$1${e}$2`)):t.setAttribute("style",`${r} ${n}: ${e};`)}e.r(n),e.d(n,{getElement:function(){return r},createElement:function(){return o},appendElement:function(){return a},elementString:function(){return i},id:function(){return s},setInlineStyle:function(){return l}})},515:function(t,n,e){const{createElement:r}=e(91);function o(t){return t.replace(/^(.*)\*\*(.+)\*\*(.*)$/g,((t,n,e,r)=>`${n}<strong>${e}</strong>${r}`)).replace(/^(.*)\*(.+)\*(.*)$/g,((t,n,e,r)=>`${n}<i>${e}</i>${r}`)).replace(/^([^\[]*)\[(.*)\]\((.*)\)(.*)$/g,((t,n,e,r,o)=>`${n}<a href="${r}" target="_blank">${e}</a>${o}`))}t.exports=function(t,n={indent:16}){const e=[];let a=0,i="",s=!1;t.replace(/\\r\\n/g,"\n");for(let n of t)s?(e.push(i),e.push("\n"),i="",a++,s=!1):"\r"!==t[a]||"\n"!==t[a+1]?"\n"!==n&&"\r"!==n?(i+=n,a++):(e.push(i),e.push("\n"),i="",a++):(s=!0,a++);e.push(i),console.log(e);const l=e.reduce((({options:t,lastNodeType:n,status:e},r,a)=>{let i=null;if((i=r.match(/^(\s*)```([^`]*)$/))&&"code-block-start"!==n)return t.push({tag:"div",attributes:{classes:`code-block-index-${a}`,style:`--indent: ${16*i[1].length}px`,"data-code-type":i[2],"data-code-block-index":a},children:[{tag:"pre",text:"",attributes:{classes:`code-block-index-${a}-line-box`}},{tag:"pre",text:"",attributes:{classes:`code-block-index-${a}-code-box`}}]}),{options:t,lastNodeType:"code-block-start",status:{skipNextLine:!0}};if((i=r.match(/^(\s*)```(\s*)$/))&&"code-block-start"===n){const n=t.at(-1),e=n.attributes["data-code-block-index"];return n.children.push({tag:"style",text:`\n            .code-block-index-${e} {\n              display: flex;\n              flex-flow: row nowrap;\n              column-gap: 4px;\n              padding: 8px 16px;\n              border-radius: 4px;\n              background-color: #aaa;\n              box-sizing: border-box;\n              max-height: 400px;\n              overflow-y: auto;\n            }\n            .code-block-index-${e}-line-box,\n            .code-block-index-${e}-code-box {\n              color: #ccc;\n              font-family: monospace;\n              white-space: pre;\n              line-height: 14px;\n              padding: 4px 0;\n            }\n            .code-block-index-${e}-line-box {\n              color: #343434;\n              text-align: right;\n            }\n            .code-block-index-${e}-code-box {\n              flex: 1;\n              height: 100%;\n              padding-left: 4px;\n              border-radius: 4px;\n              background-color: #222;\n            }\n          `}),{options:t,lastNodeType:"code-block-end"}}if("code-block-start"===n){if(e&&e.skipNextLine)return{options:t,lastNodeType:"code-block-start"};const{attributes:{"data-code-block-index":n},children:[o,i]}=t.at(-1);return"\n"!==r&&(o.text+=(a-n-2)/2+":\n"),console.log(a,n,r),i.text+=r,{options:t,lastNodeType:"code-block-start"}}if(""===r)return t.push({tag:"div",text:"",attributes:{"data-split":"true"}}),{options:t,lastNodeType:"split"};if(i=r.match(/^(#+) (.+?)$/))return t.push({tag:`h${i[1].length}`,html:o(i[2].trim())}),{options:t,lastNodeType:"heading"};if(i=r.match(/^(\s*)(>+) (.+?)$/)){const e=t[t.length-1];return"quote"===n&&i[1].length===e.attributes["data-indent"]?e.html+="<br>"+o(i[3].trim()):t.push({tag:"p",html:o(i[3].trim()),attributes:{style:`--indent: ${16*i[1].length}px`,classes:"block-quotes","data-indent":i[1].length}}),{options:t,lastNodeType:"quote"}}if(i=r.match("tablerow"===n?/^(\|[^\|]*)+\|$/:/^(\|[^\|]+)+\|$/)){const e=t[t.length-1];let i=0;"tablerow"===n&&(i=e.children[0].children.length);const s=r.slice(1,r.length-1).split("|").map(((t,n)=>{const e={"data-row-index":i,"data-col-index":n,rowspan:1,colspan:1};return t=t.replace(/(.*)(?<! )\(-(\d+)\)(.*)/,((t,n,r,o)=>(e.colspan=parseInt(r),`${n}${o}`))).replace(/(.*)(?<! )\(=(\d+)\)(.*)/,((t,n,r,o)=>(e.rowspan=parseInt(r),`${n}${o}`))),e["data-row-span"]=e.rowspan,e["data-col-span"]=e.colspan,{tag:"td",html:o(t.trim()),attributes:{...e}}}));if(s.reduce(((t,n)=>(n.attributes["data-col-index"]=t,t+n.attributes["data-col-span"])),0),e&&e.tableRowShadow&&(e.tableRowShadow=e.tableRowShadow.filter((t=>i<t.rowIndex+t.rowSpan)),e.tableRowShadow.forEach((t=>{s.filter((n=>n.attributes["data-col-index"]>=t.colIndex)).forEach((n=>n.attributes["data-col-index"]+=t.colSpan))}))),"tablerow"!==n){const n=s.filter((t=>t.attributes["data-row-span"]>1)).map((({attributes:{"data-row-index":t,"data-col-index":n,"data-row-span":e,"data-col-span":r}})=>({rowIndex:t,colIndex:n,rowSpan:e,colSpan:r}))),e=Math.max(n.reduce(((t,n)=>Math.max(t,n.rowSpan)),0),1);return t.push({tag:"table",attributes:{classes:`table-index-${a}`},children:[{tag:"tbody",children:[{tag:"tr",children:s}]},{tag:"style",text:`.table-index-${a} tr:nth-child(-n+${e}) td { font-weight: 500; background-color: #dedede; }`}],tableRowShadow:n}),{options:t,lastNodeType:"tablerow"}}if(/^[\|:\-]+$/.test(r)){const n=r.slice(1,r.length-1).split("|").map(((t,n)=>/^:\-+:$/.test(t)?`.${e.attributes.classes} td[data-col-index="${n}"] { text-align: center; }`:/^\-+:$/.test(t)?`.${e.attributes.classes} td[data-col-index="${n}"] { text-align: right; }`:"")).join(" ");return e.children.push({tag:"style",text:n}),{options:t,lastNodeType:"tablerow"}}return e.tableRowShadow.push(...s.filter((t=>t.attributes["data-row-span"]>1)).map((({attributes:{"data-row-index":t,"data-col-index":n,"data-row-span":e,"data-col-span":r}})=>({rowIndex:t,colIndex:n,rowSpan:e,colSpan:r})))),e.children[0].children.push({tag:"tr",children:s}),{options:t,lastNodeType:"tablerow"}}return(i=r.match(/^[\*-_]{3,}$/))?(t.push({tag:"hr"}),{options:t,lastNodeType:"horizontal-rule"}):(i=r.match(/^(\s*)\- (.*)$/))?(t.push({tag:"li",html:o(i[2].trim()),attributes:{style:`--indent: ${16*i[1].length}px`}}),{options:t,lastNodeType:"list-item"}):(i=r.match(/^(\s*)([^<>\n]+)$/))?(t.push({tag:"p",html:o(i[2].trim()),attributes:{style:`--indent: ${16*i[1].length}px`}}),{options:t,lastNodeType:"paragraph"}):"\n"!==r?(t.push({tag:"p",html:o(r.trim())}),{options:t,lastNodeType:"paragraph"}):{options:t,lastNodeType:n}}),{options:[],lastNodeType:"",status:{}}).options;return console.log(l),l.map(r)}}},n={};function e(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={exports:{}};return t[r](a,a.exports,e),a.exports}e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,{a:n}),n},e.d=function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},function(){"use strict";class t extends HTMLElement{#t=null;#n=null;#e=null;constructor(){super(),this.#t=this.attachShadow({mode:"closed"}),this.#t.appendChild(document.getElementById("page-header").content.cloneNode(!0)),this.#n=this.#t.querySelector("#manuscript-logo-img"),this.#e=this.#t.querySelector("#manuscript-logo-text")}connectedCallback(){this.#n.addEventListener("click",this.#r),this.#e.addEventListener("click",this.#r)}#r(){const t=window.location.href;console.log(t),/manuscript/.test(t)?window.location.assign("/manuscript"):window.location.assign("/")}}document.getElementById("page-header")||(document.body.innerHTML+='<template id="page-header">\r\n  <style>\r\n    .page-header-box {\r\n      --logoSize: 36px;\r\n\r\n      position: sticky;\r\n      width: 100vw;\r\n      height: 48px;\r\n      top: 0;\r\n      display: flex;\r\n      flex-flow: row nowrap;\r\n      align-items: center;\r\n      padding: 0 8px;\r\n      font-size: 12px;\r\n      box-sizing: border-box;\r\n      z-index: 9999;\r\n      background-color: #32343d;\r\n      box-sizing: border-box;\r\n      box-shadow: 0px 5px 10px #afafaf;\r\n      color: #ffffff;\r\n    }\r\n\r\n    .manuscript-logo-box {\r\n      display: flex;\r\n      flex-flow: row nowrap;\r\n      align-items: center;\r\n    }\r\n\r\n    .manuscript-logo-img {\r\n      width: var(--logoSize);\r\n      transform: rotateY(180deg);\r\n      border: 1px solid #343434;\r\n      border-radius: 50%;\r\n      cursor: pointer;\r\n      background-color: #fff;\r\n    }\r\n\r\n    .manuscript-logo-text {\r\n      text-decoration: underline;\r\n      font-weight: bolder;\r\n      transition: all .3s ease-in-out;\r\n      cursor: pointer;\r\n      margin-left: 8px;\r\n    }\r\n\r\n    .manuscript-logo-text:hover {\r\n      color: rgb(3, 145, 98);\r\n    }\r\n\r\n    .page-title-box {\r\n      margin-left: 16px;\r\n      font-size: 16px;\r\n      font-weight: bolder;\r\n    }\r\n  </style>\r\n  <div class="page-header-box">\r\n    <div class="manuscript-logo-box">\r\n      <img\r\n        id="manuscript-logo-img"\r\n        class="manuscript-logo-img"\r\n        src="/assets/images/writing.a59d3288.png"\r\n        alt="tigercheng manuscript logo"\r\n      />\r\n      <div\r\n        id="manuscript-logo-text"\r\n        class="manuscript-logo-text"\r\n      >ALLX Manuscript (Loom)</div>\r\n    </div>\r\n    <div class="page-title-box">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>'),customElements.define("page-header",t);var n=e(91),r=e(515),o=e.n(r);window.addEventListener("load",(function(){const t=o()("# 数据结构 Data Structure\r\n\r\n> [[GeekForGeek] Data Structure](https://www.geeksforgeeks.org/data-structures/?ref=lbp)\r\n\r\n## 数据\r\n\r\n数据是表示信息的不同数字、符号和字母的集合。\r\n\r\n> collection of different numbers, symbols, and alphabets\r\n\r\n## 数据结构\r\n\r\n> 数据结构是一组数据元素，它们提供了最简单的方法来存储和对计算机数据执行不同的操作。\r\n> 减少不同任务的空间和时间复杂性\r\n> ADT: abstract date type 抽象数据类型\r\n\r\n|Data Type|Data Structure|\r\n|:--|:--|\r\n|The data type is the **form of a variable to which a value can be assigned**. It defines that the particular variable will assign the values of the given data type only.|Data structure is a collection of different kinds of data. That entire data can be represented using an object and can be used throughout the program.|\r\n|Data type examples are int, float, double, etc.|Data structure examples are stack, queue, tree, etc.|\r\n\r\n|(=2)row=|(-2)col-|row col|\r\n|:--|:-:|--:|:-:|\r\n|row|(=2) (=2)|(=4)|\r\n|col| (-2)||\r\n|(-2)col 2|(-2)|\r\n|a|b||\r\n|(=3)row 3|(-2)(=2)c||(=2)j|\r\n|d|k|\r\n|e|f||\r\n|(-2)(=2) row 2 col 2|g|\r\n|h|i|\r\n\r\n|(-18)Periodic table of elements(化学元素周期表)|\r\n|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|\r\n|H(1)|(-16)|He(2)|\r\n|Li(3)|Be(4)|(-10)|B(5)|C(6)|N(7)|O(8)|F(9)|Ne(10)|\r\n|Na(11)|Mg(12)|(-10)|Al(13)|Si(14)|P(15)|S(16)|Cl(17)|Ar(18)|\r\n|K(19)|Ca(20)|Sc(21)|Ti(22)|V(23)|Cr(24)|Mn(25)|Fe(26)|Co(27)|Ni(28)|Cu(29)|Zn(30)|Ga(31)|Ge(32)|As(33)|Se(34)|Br(35)|Kr(36)|\r\n|Rb(37)|Sr(38)|Y(39)|Zr(40)|Nb(41)|Mo(42)|Tc(43)|Ru(44)|Rh(45)|Pd(46)|Ag(47)|Cd(48)|In(49)|Sn(50)|Sb(51)|Te(52)|I(53)|Xe(54)|\r\n|Cs(55)|Ba(56)|*|Hf(72)|Ta(73)|W(74)|Re(75)|Os(76)|Ir(77)|Pt(78)|Au(79)|Hg(80)|Tl(81)|Pb(82)|Bi(83)|Po(84)|At(85)|Rn(86)|\r\n|Fr(87)|Ra(88)|**|Rf(104)|Db(105)|Sg(106)|Bh(107)|Hs(108)|Mt(109)|Ds(110)|Rg(111)|Cn(112)|Nh(113)|Fl(114)|Mc(115)|Lv(116)|Ts(117)|Og(118)|\r\n|(-18)|\r\n|(-3)*|La(57)|Ce(58)|Pr(59)|Nd(60)|Pm(61)|Sm(62)|Eu(63)|Gd(64)|Tb(65)|Dy(66)|Ho(67)|Er(68)|Tm(69)|Yb(70)|Lu(71)|\r\n|(-3)**|Ac(89)|Th(90)|Pa(91)|U(92)|Np(93)|Pu(94)|Am(95)|Cm(96)|Bk(97)|Cf(98)|Es(99)|Fm(100)|Md(101)|No(102)|Lr(103)|\r\n\r\n---\r\n\r\n# Secure Hash Algorithm in JavaScript (SHA1)\r\n\r\n> [SECURE HASH STANDARD](https://cis.temple.edu/~giorgio/cis307/readings/sha1.html)\r\n\r\n> [online sha1](https://crypot.51strive.com/sha1.html)\r\n\r\n> [js-sha1](https://github.com/emn178/js-sha1)\r\n\r\n> [Secure Hash Algorithms](https://brilliant.org/wiki/secure-hashing-algorithms/)\r\n\r\n> [JS 使用 SHA1 加密示例](https://blog.csdn.net/qq_40147863/article/details/88034357)\r\n\r\n## 基础知识\r\n\r\nFor a message of length < 2^64 bits, the SHA-1 produces a 160-bit condensed representation of the message called a message digest.\r\n\r\n> 18446744073709551616 bits (2**64 = 1 << 64) （js中整数左移不超过32）\r\n> -> 536870912 Bytes (2**61 = 1 << 61)\r\n> -> 524288 KB (2**51 = 1 << 51)\r\n> -> 512 MB (2**41 = 1 << 41)\r\n\r\n- A hex digit is the representation of a 4-bit string.\r\n  \r\n- A word equals a 32-bit string which may be represented as a sequence of 8 hex digits.\r\n  \r\n- An integer between 0 and 1 << 32 - 1 inclusive may be represented as a word.\r\n  \r\n- A block (512-bit string) may be represented as a sequence of 16 words.\r\n\r\n## Operation on Words (A Word 32 Bits)\r\n\r\n### 1. Bitwise Operation Based on Word\r\n\r\n- bitwise and: &\r\n\r\n- bitwise or: |\r\n\r\n- bitwise xor: ^\r\n\r\n- bitwise complete: ~ （补码：取反加一）\r\n\r\n> a & (a - 1) === 0: a为2的整数次方\r\n\r\n### 2. Plus X + Y\r\n\r\nThe operation X + Y is defined as follows: words X and Y represent integers x and y.\r\n\r\nThen z = (x + y) mod 232. Convert z to a word, Z, and define Z = X + Y.\r\n\r\n> 0 <= x,y,z < 1 << 32\r\n\r\n### 3. Circular left shift operation（循环左移）\r\n\r\ncirLeftShift(X, n) = (X << n) or (X >> (32 - n))\r\n\r\n> X << n is obtained as follows: discard the left-most n bits of X and then pad the result with n zeroes on the right (the result will still be 32 bits).\r\n\r\n> X >> n is obtained by discarding the right-most n bits of X and then padding the result with n zeroes on the left.\r\n\r\n> cirLeftShift(X, n) is equivalent to a circular shift of X by n positions to the left.\r\n\r\n## 获取js字符串的二进制\r\n\r\n通过codePointAt和String.fromCodePoint实现对字符与其二进制间的相互转换。\r\n\r\n> charCodeAt返回0到65535之间的数字，表示UTF-16的一个编码单元（code unit），超过65535的编码使用codePointAt获取。\r\n\r\n> String.fromCharCode是上述过程的逆向操作，从数字获取其所对应的UTF-8编码字符，String.fromCodePoint同样是对超过UTF-16编码范围的字符的转换。\r\n\r\n由于一个UTF-16编码的字符可能由多个字节拼接，所以需要使用**let...of循环**字符串的字符，而不是使用字符串索引获取字符。\r\n\r\n```js\r\nconsole.log('𐀀'.charCodeAt(0));\r\n// 55296\r\nconsole.log('𐀀'.codePointAt(0));\r\n// 65536\r\n\r\nlet utf16String = '';\r\nfor (let i = 65536; i < 65546; i++)\r\n  utf16String += String.fromCodePoint(i);\r\n\r\nconsole.log(utf16String);\r\n// 𐀀𐀁𐀂𐀃𐀄𐀅𐀆𐀇𐀈𐀉\r\nconsole.log(utf16String.length);\r\n// 20\r\nconsole.log(utf16String[0]);\r\n// �\r\nfor (let char of utf16String) \r\n  console.log(char, char.codePointAt(0));\r\n// 𐀀 65536\r\n// 𐀁 65537\r\n// 𐀂 65538\r\n// 𐀃 65539\r\n// 𐀄 65540\r\n// 𐀅 65541\r\n// 𐀆 65542\r\n// 𐀇 65543\r\n// 𐀈 65544\r\n// 𐀉 65545\r\nconsole.log(utf16String.split(''));\r\n// [\r\n//   '�', '�', '�', '�', '�',\r\n//   '�', '�', '�', '�', '�',\r\n//   '�', '�', '�', '�', '�',\r\n//   '�', '�', '�', '�', '�'\r\n// ]\r\n```\r\n\r\nASCii码使用一个字节的八位二进制对一个字符进行编码，能够编码128种字符（规定第1位为0），对于超过127个字符的其他语言字符的编码就需要更长的字节。unicode（Universal Multiple-Octet Coded Character Set）编码对于每一种语言的字符都进行编码，从而获得独一无二的编码。对于unicode的存储来说，计算机难以识别其是多字节的编码还是单字节的ASCii编码，如果统一扩展ASCii编码会导致存储空间的极大浪费，催生出了不同的unicode实现方式。utf-8是互联网中使用普遍的unicode编码实现方式，是一种变长的编码方式，根据符号的不同使用1-6个字节表示字符。\r\n\r\nutf-8的编码规则：\r\n\r\n- 1）对于单字节编码字符，首位为0，后七位为该字符的unicode编码。（对于128以内的字符，utf-8编码与ASCii编码相同）\r\n\r\n- 2）对于多字节编码字符，如n字节字符，首个字节的前n位为1，n+1位为0，后续字节的前两位均为10，空余的二进制位填充上该字符的unicode编码\r\n\r\nunicode编码和utf-8编码对照表\r\n\r\n|unicode 编码范围 (hex)|utf-8 编码方式 (binary)|\r\n|:-:|--:|\r\n|0000 0000 - 0000 007F|0xxxxxxx|\r\n|0000 0080 - 0000 07FF|110xxxxx 10xxxxxx|\r\n|0000 0800 - 0000 FFFF|1110xxxx 10xxxxxx 10xxxxxx|\r\n|0001 0000 - 0010 FFFF|11110xxx 10xxxxxx 10xxxxxx 10xxxxxx|\r\n|0020 0000 - 03FF FFFF|111110xx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx|\r\n|0400 0000 - 7FFF FFFF|1111110x 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx|\r\n");console.log(t),(0,n.id)("contentBox").append(...t)}))}()}();